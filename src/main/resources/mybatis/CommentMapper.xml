<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.service.core.comment.repository.mapper.CommentMapper">
    <select id="findCommentDtoListByPaging" parameterType="com.service.core.comment.dto.CommentSearchDto"
            resultType="com.service.core.comment.dto.CommentDto">
        select c.comment_id,
               p.post_id,
               c.comment,
               c.comment_image,
               c.parent_id,
               date_format(c.register_time, '%y.%m.%d %H:%i') as register_time,
               c.href,
               c.user_id,
               c.user_password,
               c.user_profile_image,
               c.user_nickname,
               c.target_user_id,
               c.target_user_nickname,
               c.is_owner,
               c.is_delete,
               c.secret,
               c.anonymous
        from comment c,
             post p
        where c.post_id = #{postId}
          and c.post_id = p.post_id LIMIT #{commentSearchPagingDto.commentPagination.limitStart}
            , #{commentSearchPagingDto.recordSize}
    </select>

    <select id="findCommentCount" resultType="int">
        SELECT count(*)
        from comment
        where post_id = #{postId}
    </select>

    <select id="findCommentCountExist" resultType="int">
        SELECT count(*)
        from comment
        where post_id = #{postId}
          and is_delete = false;
    </select>

    <select id="findChildCommentCount" resultType="int">
        SELECT count(*)
        from comment
        where parent_id = #{commentId};
    </select>

    <select id="findCommentLinkDto" resultType="com.service.core.comment.dto.CommentLinkDto">
        select c.post_id, c.comment, c.href
        from comment c
        where c.post_id in (select post.post_id
                            from post
                                     inner join blog b on b.blog_id = #{blogId} and b.is_delete = false
                            where post.is_delete = false
                              and b.blog_id = post.blog_id)
          and c.is_delete = false
          and c.secret = false
        order by register_time desc limit #{commentCount};
    </select>
</mapper>